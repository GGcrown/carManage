<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.boom.dao.UserMapper">
    <resultMap id="BaseResultMap" type="cn.boom.pojo.User">
        <id column="userid" property="userid" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="usertype" property="usertype" jdbcType="INTEGER"/>
        <result column="reserve1" property="reserve1" jdbcType="VARCHAR"/>
        <result column="reserve2" property="reserve2" jdbcType="VARCHAR"/>
        <result column="reserve3" property="reserve3" jdbcType="VARCHAR"/>
        <result column="reserve4" property="reserve4" jdbcType="VARCHAR"/>
        <result column="reserve5" property="reserve5" jdbcType="VARCHAR"/>
        <result column="reserve6" property="reserve6" jdbcType="VARCHAR"/>
        <result column="reserve7" property="reserve7" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    userid, username, password, usertype, reserve1, reserve2, reserve3, reserve4, reserve5, 
    reserve6, reserve7
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.boom.pojo.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where userid = #{userid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.boom.pojo.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.boom.pojo.User">
    insert into user (userid, username, password, 
      usertype, reserve1, reserve2, 
      reserve3, reserve4, reserve5, 
      reserve6, reserve7)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=INTEGER}, #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}, 
      #{reserve3,jdbcType=VARCHAR}, #{reserve4,jdbcType=VARCHAR}, #{reserve5,jdbcType=VARCHAR}, 
      #{reserve6,jdbcType=VARCHAR}, #{reserve7,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.boom.pojo.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                userid,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="usertype != null">
                usertype,
            </if>
            <if test="reserve1 != null">
                reserve1,
            </if>
            <if test="reserve2 != null">
                reserve2,
            </if>
            <if test="reserve3 != null">
                reserve3,
            </if>
            <if test="reserve4 != null">
                reserve4,
            </if>
            <if test="reserve5 != null">
                reserve5,
            </if>
            <if test="reserve6 != null">
                reserve6,
            </if>
            <if test="reserve7 != null">
                reserve7,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="usertype != null">
                #{usertype,jdbcType=INTEGER},
            </if>
            <if test="reserve1 != null">
                #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test="reserve2 != null">
                #{reserve2,jdbcType=VARCHAR},
            </if>
            <if test="reserve3 != null">
                #{reserve3,jdbcType=VARCHAR},
            </if>
            <if test="reserve4 != null">
                #{reserve4,jdbcType=VARCHAR},
            </if>
            <if test="reserve5 != null">
                #{reserve5,jdbcType=VARCHAR},
            </if>
            <if test="reserve6 != null">
                #{reserve6,jdbcType=VARCHAR},
            </if>
            <if test="reserve7 != null">
                #{reserve7,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.boom.pojo.UserExample" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.userid != null">
                userid = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.usertype != null">
                usertype = #{record.usertype,jdbcType=INTEGER},
            </if>
            <if test="record.reserve1 != null">
                reserve1 = #{record.reserve1,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve2 != null">
                reserve2 = #{record.reserve2,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve3 != null">
                reserve3 = #{record.reserve3,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve4 != null">
                reserve4 = #{record.reserve4,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve5 != null">
                reserve5 = #{record.reserve5,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve6 != null">
                reserve6 = #{record.reserve6,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve7 != null">
                reserve7 = #{record.reserve7,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set userid = #{record.userid,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        usertype = #{record.usertype,jdbcType=INTEGER},
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
        reserve4 = #{record.reserve4,jdbcType=VARCHAR},
        reserve5 = #{record.reserve5,jdbcType=VARCHAR},
        reserve6 = #{record.reserve6,jdbcType=VARCHAR},
        reserve7 = #{record.reserve7,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.boom.pojo.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="usertype != null">
                usertype = #{usertype,jdbcType=INTEGER},
            </if>
            <if test="reserve1 != null">
                reserve1 = #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test="reserve2 != null">
                reserve2 = #{reserve2,jdbcType=VARCHAR},
            </if>
            <if test="reserve3 != null">
                reserve3 = #{reserve3,jdbcType=VARCHAR},
            </if>
            <if test="reserve4 != null">
                reserve4 = #{reserve4,jdbcType=VARCHAR},
            </if>
            <if test="reserve5 != null">
                reserve5 = #{reserve5,jdbcType=VARCHAR},
            </if>
            <if test="reserve6 != null">
                reserve6 = #{reserve6,jdbcType=VARCHAR},
            </if>
            <if test="reserve7 != null">
                reserve7 = #{reserve7,jdbcType=VARCHAR},
            </if>
        </set>
        where userid = #{userid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.boom.pojo.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
          password = #{password,jdbcType=VARCHAR},
          usertype = #{usertype,jdbcType=INTEGER},
          reserve1 = #{reserve1,jdbcType=VARCHAR},
          reserve2 = #{reserve2,jdbcType=VARCHAR},
          reserve3 = #{reserve3,jdbcType=VARCHAR},
          reserve4 = #{reserve4,jdbcType=VARCHAR},
          reserve5 = #{reserve5,jdbcType=VARCHAR},
          reserve6 = #{reserve6,jdbcType=VARCHAR},
          reserve7 = #{reserve7,jdbcType=VARCHAR}
        where userid = #{userid,jdbcType=INTEGER}
    </update>

    <!--oneself-->
    <select id="selectByPage" parameterType="int" resultMap="BaseResultMap">
        SELECT * FROM USER WHERE USERTYPE != 3 LIMIT #{0} ,5
    </select>

    <select id="selectByUsername" parameterType="String" resultType="cn.boom.pojo.User">
        SELECT * FROM USER WHERE USERNAME = #{0}
    </select>
</mapper>