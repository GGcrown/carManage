<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.boom.dao.CarMapper">
    <resultMap id="BaseResultMap" type="cn.boom.pojo.Car">
        <id column="car_id" property="carId" jdbcType="INTEGER"/>
        <result column="car_plate" property="carPlate" jdbcType="VARCHAR"/>
        <result column="car_mark" property="carMark" jdbcType="VARCHAR"/>
        <result column="car_color" property="carColor" jdbcType="VARCHAR"/>
        <result column="car_mileage" property="carMileage" jdbcType="INTEGER"/>
        <result column="car_limit" property="carLimit" jdbcType="INTEGER"/>
        <result column="car_age" property="carAge" jdbcType="DATE"/>
        <result column="car_photo" property="carPhoto" jdbcType="VARCHAR"/>
        <result column="car_userid" property="carUserid" jdbcType="INTEGER"/>
        <result column="car_type" property="carType" jdbcType="INTEGER"/>
        <result column="reserve2" property="reserve2" jdbcType="VARCHAR"/>
        <result column="reserve3" property="reserve3" jdbcType="VARCHAR"/>
        <result column="reserve4" property="reserve4" jdbcType="VARCHAR"/>
        <result column="reserve5" property="reserve5" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
		car_id, car_plate, car_mark, car_color, car_mileage, car_limit, car_age, car_photo,
		car_userid, car_type, reserve2, reserve3, reserve4, reserve5
	</sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.boom.pojo.CarExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from car
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from car
        where car_id = #{carId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from car
		where car_id = #{carId,jdbcType=INTEGER}
	</delete>
    <delete id="deleteByExample" parameterType="cn.boom.pojo.CarExample">
        delete from car
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.boom.pojo.Car">
		insert into car (car_id, car_plate, car_mark,
		car_color, car_mileage, car_limit,
		car_age, car_photo, car_userid,
		car_type, reserve2, reserve3,
		reserve4, reserve5)
		values (#{carId,jdbcType=INTEGER}, #{carPlate,jdbcType=VARCHAR}, #{carMark,jdbcType=VARCHAR},
		#{carColor,jdbcType=VARCHAR}, #{carMileage,jdbcType=INTEGER}, #{carLimit,jdbcType=INTEGER},
		#{carAge,jdbcType=DATE}, #{carPhoto,jdbcType=VARCHAR}, #{carUserid,jdbcType=INTEGER},
		#{carType,jdbcType=INTEGER}, #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR},
		#{reserve4,jdbcType=VARCHAR}, #{reserve5,jdbcType=VARCHAR})
	</insert>
    <insert id="insertSelective" parameterType="cn.boom.pojo.Car">
        insert into car
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="carId != null">
                car_id,
            </if>
            <if test="carPlate != null">
                car_plate,
            </if>
            <if test="carMark != null">
                car_mark,
            </if>
            <if test="carColor != null">
                car_color,
            </if>
            <if test="carMileage != null">
                car_mileage,
            </if>
            <if test="carLimit != null">
                car_limit,
            </if>
            <if test="carAge != null">
                car_age,
            </if>
            <if test="carPhoto != null">
                car_photo,
            </if>
            <if test="carUserid != null">
                car_userid,
            </if>
            <if test="carType != null">
                car_type,
            </if>
            <if test="reserve2 != null">
                reserve2,
            </if>
            <if test="reserve3 != null">
                reserve3,
            </if>
            <if test="reserve4 != null">
                reserve4,
            </if>
            <if test="reserve5 != null">
                reserve5,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="carId != null">
                #{carId,jdbcType=INTEGER},
            </if>
            <if test="carPlate != null">
                #{carPlate,jdbcType=VARCHAR},
            </if>
            <if test="carMark != null">
                #{carMark,jdbcType=VARCHAR},
            </if>
            <if test="carColor != null">
                #{carColor,jdbcType=VARCHAR},
            </if>
            <if test="carMileage != null">
                #{carMileage,jdbcType=INTEGER},
            </if>
            <if test="carLimit != null">
                #{carLimit,jdbcType=INTEGER},
            </if>
            <if test="carAge != null">
                #{carAge,jdbcType=DATE},
            </if>
            <if test="carPhoto != null">
                #{carPhoto,jdbcType=VARCHAR},
            </if>
            <if test="carUserid != null">
                #{carUserid,jdbcType=INTEGER},
            </if>
            <if test="carType != null">
                #{carType,jdbcType=INTEGER},
            </if>
            <if test="reserve2 != null">
                #{reserve2,jdbcType=VARCHAR},
            </if>
            <if test="reserve3 != null">
                #{reserve3,jdbcType=VARCHAR},
            </if>
            <if test="reserve4 != null">
                #{reserve4,jdbcType=VARCHAR},
            </if>
            <if test="reserve5 != null">
                #{reserve5,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.boom.pojo.CarExample" resultType="java.lang.Integer">
        select count(*) from car
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update car
        <set>
            <if test="record.carId != null">
                car_id = #{record.carId,jdbcType=INTEGER},
            </if>
            <if test="record.carPlate != null">
                car_plate = #{record.carPlate,jdbcType=VARCHAR},
            </if>
            <if test="record.carMark != null">
                car_mark = #{record.carMark,jdbcType=VARCHAR},
            </if>
            <if test="record.carColor != null">
                car_color = #{record.carColor,jdbcType=VARCHAR},
            </if>
            <if test="record.carMileage != null">
                car_mileage = #{record.carMileage,jdbcType=INTEGER},
            </if>
            <if test="record.carLimit != null">
                car_limit = #{record.carLimit,jdbcType=INTEGER},
            </if>
            <if test="record.carAge != null">
                car_age = #{record.carAge,jdbcType=DATE},
            </if>
            <if test="record.carPhoto != null">
                car_photo = #{record.carPhoto,jdbcType=VARCHAR},
            </if>
            <if test="record.carUserid != null">
                car_userid = #{record.carUserid,jdbcType=INTEGER},
            </if>
            <if test="record.carType != null">
                car_type = #{record.carType,jdbcType=INTEGER},
            </if>
            <if test="record.reserve2 != null">
                reserve2 = #{record.reserve2,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve3 != null">
                reserve3 = #{record.reserve3,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve4 != null">
                reserve4 = #{record.reserve4,jdbcType=VARCHAR},
            </if>
            <if test="record.reserve5 != null">
                reserve5 = #{record.reserve5,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update car
        set car_id = #{record.carId,jdbcType=INTEGER},
        car_plate = #{record.carPlate,jdbcType=VARCHAR},
        car_mark = #{record.carMark,jdbcType=VARCHAR},
        car_color = #{record.carColor,jdbcType=VARCHAR},
        car_mileage = #{record.carMileage,jdbcType=INTEGER},
        car_limit = #{record.carLimit,jdbcType=INTEGER},
        car_age = #{record.carAge,jdbcType=DATE},
        car_photo = #{record.carPhoto,jdbcType=VARCHAR},
        car_userid = #{record.carUserid,jdbcType=INTEGER},
        car_type = #{record.carType,jdbcType=INTEGER},
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
        reserve4 = #{record.reserve4,jdbcType=VARCHAR},
        reserve5 = #{record.reserve5,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.boom.pojo.Car">
        update car
        <set>
            <if test="carPlate != null">
                car_plate = #{carPlate,jdbcType=VARCHAR},
            </if>
            <if test="carMark != null">
                car_mark = #{carMark,jdbcType=VARCHAR},
            </if>
            <if test="carColor != null">
                car_color = #{carColor,jdbcType=VARCHAR},
            </if>
            <if test="carMileage != null">
                car_mileage = #{carMileage,jdbcType=INTEGER},
            </if>
            <if test="carLimit != null">
                car_limit = #{carLimit,jdbcType=INTEGER},
            </if>
            <if test="carAge != null">
                car_age = #{carAge,jdbcType=DATE},
            </if>
            <if test="carPhoto != null">
                car_photo = #{carPhoto,jdbcType=VARCHAR},
            </if>
            <if test="carUserid != null">
                car_userid = #{carUserid,jdbcType=INTEGER},
            </if>
            <if test="carType != null">
                car_type = #{carType,jdbcType=INTEGER},
            </if>
            <if test="reserve2 != null">
                reserve2 = #{reserve2,jdbcType=VARCHAR},
            </if>
            <if test="reserve3 != null">
                reserve3 = #{reserve3,jdbcType=VARCHAR},
            </if>
            <if test="reserve4 != null">
                reserve4 = #{reserve4,jdbcType=VARCHAR},
            </if>
            <if test="reserve5 != null">
                reserve5 = #{reserve5,jdbcType=VARCHAR},
            </if>
        </set>
        where car_id = #{carId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.boom.pojo.Car">
		update car
		set car_plate = #{carPlate,jdbcType=VARCHAR},
		car_mark = #{carMark,jdbcType=VARCHAR},
		car_color = #{carColor,jdbcType=VARCHAR},
		car_mileage = #{carMileage,jdbcType=INTEGER},
		car_limit = #{carLimit,jdbcType=INTEGER},
		car_age = #{carAge,jdbcType=DATE},
		car_photo = #{carPhoto,jdbcType=VARCHAR},
		car_userid = #{carUserid,jdbcType=INTEGER},
		car_type = #{carType,jdbcType=INTEGER},
		reserve2 = #{reserve2,jdbcType=VARCHAR},
		reserve3 = #{reserve3,jdbcType=VARCHAR},
		reserve4 = #{reserve4,jdbcType=VARCHAR},
		reserve5 = #{reserve5,jdbcType=VARCHAR}
		where car_id = #{carId,jdbcType=INTEGER}
	</update>

    <!-- myself -->
    <select id="selectByPage" parameterType="int" resultMap="BaseResultMap">
		select c.*,u.username
		from car c inner JOIN user u on c.car_userid=u.userid
		where c.car_type!=3 limit #{0},5
	</select>
</mapper>